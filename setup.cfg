[metadata]
name = flow_adaptor
summary = External Project Web Service
description-file =
    README.rst
author = Fabo Yi
author-email = yifabo@cmss.chinamobile.com
home-page = http://cmsoft.10086.cn/ponerine.html
classifier =
    Environment :: cmss
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: ChinaMobile Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7

[global]
setup-hooks =
    pbr.hooks.setup_hook

[files]
packages =
    eagle

[entry_points]
eagle.scheduler.filters =
    DifferentBackendFilter = eagle.scheduler.filters.affinity_filter:DifferentBackendFilter
    DriverFilter = eagle.scheduler.filters.driver_filter:DriverFilter
oslo.config.opts =
    eagle = eagle.opts:list_opts
oslo.config.opts.defaults =
    eagle = eagle.common.config:set_middleware_defaults
console_scripts =
    eagle-backup = cinder.cmd.backup:main
    eagle-rootwrap = oslo_rootwrap.cmd:main
wsgi_scripts =
    eagle-wsgi = eagle.wsgi.wsgi:initialize_application
# These are for backwards compat with Havana notification_driver configuration values
oslo_messaging.notify.drivers =
    eagle.openstack.common.notifier.log_notifier = oslo_messaging.notify._impl_log:LogDriver
# These are for backwards compatibility with Juno middleware configurations
oslo_middleware =
    eagle.openstack.common.middleware.request_id = oslo_middleware.request_id

cinder.database.migration_backend =
    sqlalchemy = oslo_db.sqlalchemy.migration
# In-tree Tempest test entry point
tempest.test_plugins =
    eagle_tests = eagle.tests.tempest.plugin:CinderTempestPlugin

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[egg_info]
tag_build =
tag_date = 0
tag_svn_revision = 0

[compile_catalog]
directory = eagle/locale
domain = eagle

[update_catalog]
domain = eagle
output_dir = eagle/locale
input_file = eagle/locale/eagle.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = eagle/locale/eagle.pot